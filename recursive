"""
문제: 패밀리 레스토랑에서 여러 개의 테이블에 나누어 앉으려고 합니다. 이때 한 사람만 앉는 테이빌이 없게 그룹을 지어야 합니다.
인원 수를 나누는 패턴만 구하면 되며, 누가 어디에 앉는지 등은 고려하지 않아도 괜찮습니다.
예를 들어 6명이라면 다음과 같은 네 가지 경우를 생각할 수 있습니다.
-----------------------
2명+2명+2명    2명+4명    3명+3명   6명
-----------------------
한 개의 테이블에 앉을 수 있는 최대 사람의 수는 10명입니다. 100명의 사람이 하나 이상의 테이블에 나누어 앉는 패턴을 구하세요.
소스 코드에서 한글 변수명은 여러분들의 이해를 돕기 위한 것이니, 식별자 작성 규칙에 따라 이름을 정해주세요.
"""

# 답안
앉힐수있는최소사람수 = 2
앉힐수있는최대사람수 = 10
전체사람의수 = 100
memo = {}

def 문제(남은사람수, 앉힌사람수):
    key = str([남은사람수, 앉힌사람수])
    if key in memo:
        return memo[key]
    if 남은사람수 < 0 
        return 0
    if 남은사람수 == 0:
        return 1
    count = 0
    for i in range(앉힌사람수, 앉힐수있는최대사람수 + 1)
        count += 문제(남은사람수 -i, i)
    memo[key] = count
    return count

print(문제(전체사람의수, 앉힐수있는최소사람수))

# 질문
"""
재귀 함수 안의 for문 도는 순서를 맞게 이해한건지 궁금합니다.
내가 이해한 순서대로 간단하게 전체사람의수를 6으로 계산해보면

def 문제(6, 2):
...
    for i in range(2, 10+1)
        count += 문제(6-2, 2)

그럼 문제(6-2, 2)가 다시 돌면서

문제(4, 2)
...
    count = 0
    for i in range(2, 10+1)
        count += 문제(4-2, 2)

다음으로

문제(2, 2)
...
    count = 0
    for i in range(2, 10+1)
        count += 문제(2-2, 2)
        
다음으로

문제(0, 2)
...
    if 남은사람수 == 0
    return 1

따라서 지금 단계에서 count = 1    key = '[0, 2]'    memo = {'[0, 2]':1}

54라인의 문제(2, 2) for문을 계속 돌리면 남은사람수가 < 0 이므로 return 0
다음 순서는 46번 라인의 문제(4, 2) for문. i = 3일때 return 0, i = 4일때 return 1 이므로 count = 2    key = '[0, 4]'    memo = {'[0, 2]':1, '[0, 4]':2}    
다음 순서는 39번 라인의 문제(6, 2) for문. i = 3일때 return 1 이므로 count = 3    key = '[0, 3]'    memo = {'[0, 2]':1, '[0, 4]':2, '[0, 3]':3}
이어서 i = 6일때 return 1이므로 count = 6    key = '[0, 6]'    memo = {'[0, 2]':1, '[0, 4]':2, '[0, 3]':3, '[0, 6]':4}
이렇게 이해했는데 이게 맞을까요?
"""
